Para executar o código, é necessário apenas utilizar
    runhaskell main.hs
e então entrar com o input

Operadores suportados:
Or:            |
And:           &
Implication:   ->
Not:           ~

Exemplos de input:

->ab
&(~(|ab))(->cd)
|a(~a)
->(&cd)(|a(~c))

Divisão do Trabalho:

(generate/beautify/stringify)TTLine -> Vitor Bardasson
resolveLine -> Victor Brandao
getValue -> Victor Brandao

stringToFormula -> Vitor Bardasson
countT -> Vitor Bardasson

generateNestedParenthesisList -> Vitor Bardasson
allNested -> Vitor Bardasson
getExternalSubFormulas -> Vitor Bardasson
removeUnusedChars -> Victor Brandao
getMatchingParenthesis -> Victor Brandao
addExternalParenthesis -> Victor Brandao

cleanBinary -> Vitor Bardasson
binaryList -> Vitor Bardasson
toBinary -> Victor Brandao

reverseList -> Victor Brandao
sliceSubFormulas -> Vitor Bardasson
resolve -> Victor Brandao
parseTTLine -> Victor Brandao